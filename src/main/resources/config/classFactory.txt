#
# JsonReader.ClassFactory mappings
#
char = Convertable
boolean = Convertable
byte = Convertable
short = Convertable
int = Convertable
long = Convertable
float = Convertable
double = Convertable

java.lang.Character = Convertable
java.lang.Boolean = Convertable
java.lang.Byte = Convertable
java.lang.Short = Convertable
java.lang.Integer = Convertable
java.lang.Long = Convertable
java.lang.Float = Convertable
java.lang.Double = Convertable

[C = com.cedarsoftware.io.factory.CharacterPrimArrayFactory
[Z = ArrayFactory
[B = ArrayFactory
[S = ArrayFactory
[I = ArrayFactory
[J = ArrayFactory
[F = ArrayFactory
[D = ArrayFactory

[Ljava.lang.Character; = ArrayFactory
[Ljava.lang.Boolean; = ArrayFactory
[Ljava.lang.Byte; = ArrayFactory
[Ljava.lang.Short; = ArrayFactory
[Ljava.lang.Integer; = ArrayFactory
[Ljava.lang.Long; = ArrayFactory
[Ljava.lang.Float; = ArrayFactory
[Ljava.lang.Double; = ArrayFactory

[Ljava.lang.Class; = ArrayFactory
[Ljava.lang.String; = ArrayFactory
[Ljava.util.Calendar; = ArrayFactory
[Ljava.util.Date; = ArrayFactory
[Ljava.sql.Date; = ArrayFactory
[Ljava.sql.Timestamp; = ArrayFactory
[Ljava.time.LocalDate; = ArrayFactory
[Ljava.math.BigDecimal; = ArrayFactory
[Ljava.math.BigInteger; = ArrayFactory
[Ljava.util.concurrent.atomic.AtomicBoolean; = ArrayFactory
[Ljava.util.concurrent.atomic.AtomicInteger; = ArrayFactory
[Ljava.util.concurrent.atomic.AtomicLong; = ArrayFactory
[Ljava.time.Duration; = ArrayFactory
[Ljava.time.Instant; = ArrayFactory

java.lang.Class = Convertable
java.util.Locale = Convertable
java.lang.String = Convertable
java.lang.StackTraceElement = com.cedarsoftware.io.factory.StackTraceElementFactory
java.lang.StringBuffer = Convertable
java.lang.StringBuilder = Convertable

java.math.BigDecimal = Convertable
java.math.BigInteger = Convertable

java.net.URL = Convertable
java.net.URI = Convertable

java.sql.Date = Convertable
java.sql.Timestamp = Convertable

java.time.Duration = Convertable
java.time.Instant = Convertable
java.time.LocalDate = Convertable
java.time.LocalDateTime = Convertable
java.time.LocalTime = Convertable
java.time.MonthDay = Convertable
java.time.OffsetDateTime = Convertable
java.time.OffsetTime = Convertable
java.time.Period = Convertable
java.time.Year = Convertable
java.time.YearMonth = Convertable
java.time.ZonedDateTime = Convertable
java.time.ZoneId = Convertable
java.time.ZoneOffset = Convertable
java.time.ZoneRegion = Convertable

java.util.concurrent.atomic.AtomicBoolean = Convertable
java.util.concurrent.atomic.AtomicInteger = Convertable
java.util.concurrent.atomic.AtomicLong = Convertable

java.util.UUID = Convertable
java.util.Calendar = Convertable
java.util.Collection = com.cedarsoftware.io.factory.CollectionFactory
java.util.Date = Convertable
java.util.GregorianCalendar = Convertable
java.util.List = com.cedarsoftware.io.factory.CollectionFactory
java.util.Set = com.cedarsoftware.io.factory.CollectionFactory
java.util.SortedSet = com.cedarsoftware.io.factory.CollectionFactory
java.util.NavigableSet = com.cedarsoftware.io.factory.CollectionFactory
java.util.Map = com.cedarsoftware.io.factory.MapFactory
java.util.SortedMap = com.cedarsoftware.io.factory.MapFactory
java.util.NavigableMap = com.cedarsoftware.io.factory.MapFactory

java.util.TimeZone = Convertable
sun.util.calendar.ZoneInfo = Convertable

# Use factory classes to re-create empty Collections classes as they are not easily instantiated
java.util.Collections$EmptyEnumeration = com.cedarsoftware.io.factory.EmptyEnumerationFactory
java.util.Collections$EmptyIterator = com.cedarsoftware.io.factory.EmptyIteratorFactory
java.util.Collections$EmptyListIterator = com.cedarsoftware.io.factory.EmptyListIteratorFactory
java.util.Collections$EmptyList = com.cedarsoftware.io.factory.EmptyListFactory
java.util.Collections$EmptySet = com.cedarsoftware.io.factory.EmptySetFactory
java.util.Collections$UnmodifiableNavigableSet$EmptyNavigableSet = com.cedarsoftware.io.factory.EmptyNavigableSetFactory
java.util.Collections$EmptyMap = com.cedarsoftware.io.factory.EmptyMapFactory
java.util.Collections$UnmodifiableNavigableMap$EmptyNavigableMap = com.cedarsoftware.io.factory.EmptyNavigableMapFactory

# Use factory classes to re-create unmodifiable Collections classes -> these are "marker" collections that will be
# "flipped" to Unmodifiable classes once filled, keeping them the same instance as the original.
java.util.Collections$UnmodifiableCollection = com.cedarsoftware.io.factory.UnmodifiableListFactory
java.util.Collections$UnmodifiableList = com.cedarsoftware.io.factory.UnmodifiableListFactory
java.util.Collections$UnmodifiableRandomAccessList = com.cedarsoftware.io.factory.UnmodifiableListFactory
java.util.Collections$UnmodifiableSet = com.cedarsoftware.io.factory.UnmodifiableSetFactory
java.util.Collections$UnmodifiableSortedSet = com.cedarsoftware.io.factory.UnmodifiableNavigableSetFactory
java.util.Collections$UnmodifiableNavigableSet = com.cedarsoftware.io.factory.UnmodifiableNavigableSetFactory
java.util.Collections$UnmodifiableMap = com.cedarsoftware.io.factory.UnmodifiableMapFactory
java.util.Collections$UnmodifiableSortedMap = com.cedarsoftware.io.factory.UnmodifiableNavigableMapFactory
java.util.Collections$UnmodifiableNavigableMap = com.cedarsoftware.io.factory.UnmodifiableNavigableMapFactory

com.cedarsoftware.io.util.UnmodifiableList = com.cedarsoftware.io.factory.UnmodifiableListFactory
com.cedarsoftware.io.util.UnmodifiableSet = com.cedarsoftware.io.factory.UnmodifiableSetFactory
com.cedarsoftware.io.util.UnmodifiableNavigableSet = com.cedarsoftware.io.factory.UnmodifiableNavigableSetFactory
com.cedarsoftware.io.util.UnmodifiableMap = com.cedarsoftware.io.factory.UnmodifiableMapFactory
com.cedarsoftware.io.util.UnmodifiableNavigableMap = com.cedarsoftware.io.factory.UnmodifiableNavigableMapFactory

java.util.ImmutableCollections$ListN = com.cedarsoftware.io.factory.ImmutableListFactory
java.util.ImmutableCollections$List12 = com.cedarsoftware.io.factory.ImmutableListFactory
java.util.ImmutableCollections$SetN = com.cedarsoftware.io.factory.ImmutableSetFactory
java.util.ImmutableCollections$Set12 = com.cedarsoftware.io.factory.ImmutableSetFactory